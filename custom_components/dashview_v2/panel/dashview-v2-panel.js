/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
/******/ (() => { // webpackBootstrap
/******/ 	"use strict";
/******/ 	var __webpack_modules__ = ({

/***/ 645:
/***/ (() => {

eval("{\nconsole.log('[Dashview Debug] Script starting');\nclass DashviewDebugPanel extends HTMLElement {\n    constructor() {\n        super();\n        this._narrow = false;\n        console.log('[Dashview Debug] Panel constructor called');\n    }\n    connectedCallback() {\n        console.log('[Dashview Debug] Panel connected to DOM');\n        this.innerHTML = `\n            <div style=\"padding: 20px; font-family: sans-serif;\">\n                <h1>Dashview V2 Debug Panel</h1>\n                <p>If you see this, the panel is loading!</p>\n                <p>Timestamp: ${new Date().toISOString()}</p>\n                <pre id=\"debug-info\"></pre>\n            </div>\n        `;\n        this.updateDebugInfo();\n    }\n    disconnectedCallback() {\n        console.log('[Dashview Debug] Panel disconnected from DOM');\n    }\n    updateDebugInfo() {\n        const info = {\n            customElements: {\n                'dashview-v2-panel': !!customElements.get('dashview-v2-panel'),\n                'dashview-dashboard': !!customElements.get('dashview-dashboard'),\n            },\n            properties: {\n                hass: !!this._hass,\n                narrow: this._narrow,\n                route: !!this._route,\n                panel: !!this._panel,\n            },\n            timestamp: new Date().toISOString(),\n        };\n        const debugEl = this.querySelector('#debug-info');\n        if (debugEl) {\n            debugEl.textContent = JSON.stringify(info, null, 2);\n        }\n    }\n    set hass(value) {\n        console.log('[Dashview Debug] hass set', !!value);\n        this._hass = value;\n        this.updateDebugInfo();\n    }\n    get hass() {\n        return this._hass;\n    }\n    set narrow(value) {\n        console.log('[Dashview Debug] narrow set', value);\n        this._narrow = value;\n        this.updateDebugInfo();\n    }\n    get narrow() {\n        return this._narrow;\n    }\n    set route(value) {\n        console.log('[Dashview Debug] route set', value);\n        this._route = value;\n        this.updateDebugInfo();\n    }\n    get route() {\n        return this._route;\n    }\n    set panel(value) {\n        console.log('[Dashview Debug] panel set', value);\n        this._panel = value;\n        this.updateDebugInfo();\n    }\n    get panel() {\n        return this._panel;\n    }\n}\n// Register immediately\nif (!customElements.get('dashview-v2-panel')) {\n    customElements.define('dashview-v2-panel', DashviewDebugPanel);\n    console.log('[Dashview Debug] Panel registered');\n}\nelse {\n    console.log('[Dashview Debug] Panel already registered');\n}\n// Also put on window for debugging\nwindow.DashviewDebugPanel = DashviewDebugPanel;\nconsole.log('[Dashview Debug] Script completed');\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,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QUM7UUFDcEIsSUFBSSxDQUFDLGVBQWUsRUFBRSxDQUFDO0lBQzNCLENBQUM7SUFFRCxJQUFJLEtBQUs7UUFDTCxPQUFPLElBQUksQ0FBQyxNQUFNLENBQUM7SUFDdkIsQ0FBQztDQUNKO0FBRUQsdUJBQXVCO0FBQ3ZCLElBQUksQ0FBQyxjQUFjLENBQUMsR0FBRyxDQUFDLG1CQUFtQixDQUFDLEVBQUUsQ0FBQztJQUMzQyxjQUFjLENBQUMsTUFBTSxDQUFDLG1CQUFtQixFQUFFLGtCQUFrQixDQUFDLENBQUM7SUFDL0QsT0FBTyxDQUFDLEdBQUcsQ0FBQyxtQ0FBbUMsQ0FBQyxDQUFDO0FBQ3JELENBQUM7S0FBTSxDQUFDO0lBQ0osT0FBTyxDQUFDLEdBQUcsQ0FBQywyQ0FBMkMsQ0FBQyxDQUFDO0FBQzdELENBQUM7QUFFRCxtQ0FBbUM7QUFDbEMsTUFBYyxDQUFDLGtCQUFrQixHQUFHLGtCQUFrQixDQUFDO0FBQ3hELE9BQU8sQ0FBQyxHQUFHLENBQUMsbUNBQW1DLENBQUMsQ0FBQyIsInNvdXJjZXMiOlsid2VicGFjazovL0BkYXNodmlldy9mcm9udGVuZC8uL3NyYy9wYW5lbC1kZWJ1Zy50cz81YzY1Il0sInNvdXJjZXNDb250ZW50IjpbImNvbnNvbGUubG9nKCdbRGFzaHZpZXcgRGVidWddIFNjcmlwdCBzdGFydGluZycpO1xuXG5jbGFzcyBEYXNodmlld0RlYnVnUGFuZWwgZXh0ZW5kcyBIVE1MRWxlbWVudCB7XG4gICAgcHJpdmF0ZSBfaGFzczogYW55O1xuICAgIHByaXZhdGUgX25hcnJvdzogYm9vbGVhbiA9IGZhbHNlO1xuICAgIHByaXZhdGUgX3JvdXRlOiBhbnk7XG4gICAgcHJpdmF0ZSBfcGFuZWw6IGFueTtcblxuICAgIGNvbnN0cnVjdG9yKCkge1xuICAgICAgICBzdXBlcigpO1xuICAgICAgICBjb25zb2xlLmxvZygnW0Rhc2h2aWV3IERlYnVnXSBQYW5lbCBjb25zdHJ1Y3RvciBjYWxsZWQnKTtcbiAgICB9XG5cbiAgICBjb25uZWN0ZWRDYWxsYmFjaygpIHtcbiAgICAgICAgY29uc29sZS5sb2coJ1tEYXNodmlldyBEZWJ1Z10gUGFuZWwgY29ubmVjdGVkIHRvIERPTScpO1xuICAgICAgICB0aGlzLmlubmVySFRNTCA9IGBcbiAgICAgICAgICAgIDxkaXYgc3R5bGU9XCJwYWRkaW5nOiAyMHB4OyBmb250LWZhbWlseTogc2Fucy1zZXJpZjtcIj5cbiAgICAgICAgICAgICAgICA8aDE+RGFzaHZpZXcgVjIgRGVidWcgUGFuZWw8L2gxPlxuICAgICAgICAgICAgICAgIDxwPklmIHlvdSBzZWUgdGhpcywgdGhlIHBhbmVsIGlzIGxvYWRpbmchPC9wPlxuICAgICAgICAgICAgICAgIDxwPlRpbWVzdGFtcDogJHtuZXcgRGF0ZSgpLnRvSVNPU3RyaW5nKCl9PC9wPlxuICAgICAgICAgICAgICAgIDxwcmUgaWQ9XCJkZWJ1Zy1pbmZvXCI+PC9wcmU+XG4gICAgICAgICAgICA8L2Rpdj5cbiAgICAgICAgYDtcbiAgICAgICAgXG4gICAgICAgIHRoaXMudXBkYXRlRGVidWdJbmZvKCk7XG4gICAgfVxuXG4gICAgZGlzY29ubmVjdGVkQ2FsbGJhY2soKSB7XG4gICAgICAgIGNvbnNvbGUubG9nKCdbRGFzaHZpZXcgRGVidWddIFBhbmVsIGRpc2Nvbm5lY3RlZCBmcm9tIERPTScpO1xuICAgIH1cblxuICAgIHVwZGF0ZURlYnVnSW5mbygpIHtcbiAgICAgICAgY29uc3QgaW5mbyA9IHtcbiAgICAgICAgICAgIGN1c3RvbUVsZW1lbnRzOiB7XG4gICAgICAgICAgICAgICAgJ2Rhc2h2aWV3LXYyLXBhbmVsJzogISFjdXN0b21FbGVtZW50cy5nZXQoJ2Rhc2h2aWV3LXYyLXBhbmVsJyksXG4gICAgICAgICAgICAgICAgJ2Rhc2h2aWV3LWRhc2hib2FyZCc6ICEhY3VzdG9tRWxlbWVudHMuZ2V0KCdkYXNodmlldy1kYXNoYm9hcmQnKSxcbiAgICAgICAgICAgIH0sXG4gICAgICAgICAgICBwcm9wZXJ0aWVzOiB7XG4gICAgICAgICAgICAgICAgaGFzczogISF0aGlzLl9oYXNzLFxuICAgICAgICAgICAgICAgIG5hcnJvdzogdGhpcy5fbmFycm93LFxuICAgICAgICAgICAgICAgIHJvdXRlOiAhIXRoaXMuX3JvdXRlLFxuICAgICAgICAgICAgICAgIHBhbmVsOiAhIXRoaXMuX3BhbmVsLFxuICAgICAgICAgICAgfSxcbiAgICAgICAgICAgIHRpbWVzdGFtcDogbmV3IERhdGUoKS50b0lTT1N0cmluZygpLFxuICAgICAgICB9O1xuICAgICAgICBcbiAgICAgICAgY29uc3QgZGVidWdFbCA9IHRoaXMucXVlcnlTZWxlY3RvcignI2RlYnVnLWluZm8nKTtcbiAgICAgICAgaWYgKGRlYnVnRWwpIHtcbiAgICAgICAgICAgIGRlYnVnRWwudGV4dENvbnRlbnQgPSBKU09OLnN0cmluZ2lmeShpbmZvLCBudWxsLCAyKTtcbiAgICAgICAgfVxuICAgIH1cbiAgICBcbiAgICBzZXQgaGFzcyh2YWx1ZTogYW55KSB7XG4gICAgICAgIGNvbnNvbGUubG9nKCdbRGFzaHZpZXcgRGVidWddIGhhc3Mgc2V0JywgISF2YWx1ZSk7XG4gICAgICAgIHRoaXMuX2hhc3MgPSB2YWx1ZTtcbiAgICAgICAgdGhpcy51cGRhdGVEZWJ1Z0luZm8oKTtcbiAgICB9XG5cbiAgICBnZXQgaGFzcygpIHtcbiAgICAgICAgcmV0dXJuIHRoaXMuX2hhc3M7XG4gICAgfVxuICAgIFxuICAgIHNldCBuYXJyb3codmFsdWU6IGJvb2xlYW4pIHtcbiAgICAgICAgY29uc29sZS5sb2coJ1tEYXNodmlldyBEZWJ1Z10gbmFycm93IHNldCcsIHZhbHVlKTtcbiAgICAgICAgdGhpcy5fbmFycm93ID0gdmFsdWU7XG4gICAgICAgIHRoaXMudXBkYXRlRGVidWdJbmZvKCk7XG4gICAgfVxuXG4gICAgZ2V0IG5hcnJvdygpIHtcbiAgICAgICAgcmV0dXJuIHRoaXMuX25hcnJvdztcbiAgICB9XG4gICAgXG4gICAgc2V0IHJvdXRlKHZhbHVlOiBhbnkpIHtcbiAgICAgICAgY29uc29sZS5sb2coJ1tEYXNodmlldyBEZWJ1Z10gcm91dGUgc2V0JywgdmFsdWUpO1xuICAgICAgICB0aGlzLl9yb3V0ZSA9IHZhbHVlO1xuICAgICAgICB0aGlzLnVwZGF0ZURlYnVnSW5mbygpO1xuICAgIH1cblxuICAgIGdldCByb3V0ZSgpIHtcbiAgICAgICAgcmV0dXJuIHRoaXMuX3JvdXRlO1xuICAgIH1cbiAgICBcbiAgICBzZXQgcGFuZWwodmFsdWU6IGFueSkge1xuICAgICAgICBjb25zb2xlLmxvZygnW0Rhc2h2aWV3IERlYnVnXSBwYW5lbCBzZXQnLCB2YWx1ZSk7XG4gICAgICAgIHRoaXMuX3BhbmVsID0gdmFsdWU7XG4gICAgICAgIHRoaXMudXBkYXRlRGVidWdJbmZvKCk7XG4gICAgfVxuXG4gICAgZ2V0IHBhbmVsKCkge1xuICAgICAgICByZXR1cm4gdGhpcy5fcGFuZWw7XG4gICAgfVxufVxuXG4vLyBSZWdpc3RlciBpbW1lZGlhdGVseVxuaWYgKCFjdXN0b21FbGVtZW50cy5nZXQoJ2Rhc2h2aWV3LXYyLXBhbmVsJykpIHtcbiAgICBjdXN0b21FbGVtZW50cy5kZWZpbmUoJ2Rhc2h2aWV3LXYyLXBhbmVsJywgRGFzaHZpZXdEZWJ1Z1BhbmVsKTtcbiAgICBjb25zb2xlLmxvZygnW0Rhc2h2aWV3IERlYnVnXSBQYW5lbCByZWdpc3RlcmVkJyk7XG59IGVsc2Uge1xuICAgIGNvbnNvbGUubG9nKCdbRGFzaHZpZXcgRGVidWddIFBhbmVsIGFscmVhZHkgcmVnaXN0ZXJlZCcpO1xufVxuXG4vLyBBbHNvIHB1dCBvbiB3aW5kb3cgZm9yIGRlYnVnZ2luZ1xuKHdpbmRvdyBhcyBhbnkpLkRhc2h2aWV3RGVidWdQYW5lbCA9IERhc2h2aWV3RGVidWdQYW5lbDtcbmNvbnNvbGUubG9nKCdbRGFzaHZpZXcgRGVidWddIFNjcmlwdCBjb21wbGV0ZWQnKTsiXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///645\n\n}");

/***/ })

/******/ 	});
/************************************************************************/
/******/ 	
/******/ 	// startup
/******/ 	// Load entry module and return exports
/******/ 	// This entry module can't be inlined because the eval-source-map devtool is used.
/******/ 	var __webpack_exports__ = {};
/******/ 	__webpack_modules__[645]();
/******/ 	
/******/ })()
;