name: CI

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main ]

jobs:
  lint-backend:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v3
    
    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.11'
    
    - name: Cache Python dependencies
      uses: actions/cache@v3
      with:
        path: ~/.cache/pip
        key: ${{ runner.os }}-pip-${{ hashFiles('**/requirements*.txt') }}
        restore-keys: |
          ${{ runner.os }}-pip-
    
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt
        pip install -r requirements-dev.txt
    
    - name: Lint with black
      run: black --check custom_components/dashview_v2/backend
    
    - name: Lint with flake8
      run: flake8 custom_components/dashview_v2/backend
    
    - name: Type check with mypy
      run: mypy custom_components/dashview_v2/backend

  lint-frontend:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v3
    
    - name: Setup Node.js
      uses: actions/setup-node@v3
      with:
        node-version: '18'
        cache: 'npm'
        cache-dependency-path: custom_components/dashview_v2/frontend/package-lock.json
    
    - name: Install dependencies
      working-directory: custom_components/dashview_v2/frontend
      run: npm ci
    
    - name: Lint
      working-directory: custom_components/dashview_v2/frontend
      run: npm run lint
    
    - name: Type check
      working-directory: custom_components/dashview_v2/frontend
      run: npm run type-check
    
    - name: Format check
      working-directory: custom_components/dashview_v2/frontend
      run: npm run format:check

  test-backend:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: ['3.9', '3.10', '3.11']
    
    steps:
    - uses: actions/checkout@v3
    
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v4
      with:
        python-version: ${{ matrix.python-version }}
    
    - name: Cache Python dependencies
      uses: actions/cache@v3
      with:
        path: ~/.cache/pip
        key: ${{ runner.os }}-pip-${{ hashFiles('**/requirements*.txt') }}
        restore-keys: |
          ${{ runner.os }}-pip-
    
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt
        pip install -r requirements-dev.txt
    
    - name: Test with pytest
      run: |
        pytest tests/backend -v --cov=custom_components.dashview_v2.backend --cov-report=xml
    
    - name: Upload coverage
      uses: codecov/codecov-action@v3
      with:
        file: ./coverage.xml
        flags: backend
        name: backend-${{ matrix.python-version }}

  test-frontend:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v3
    
    - name: Setup Node.js
      uses: actions/setup-node@v3
      with:
        node-version: '18'
        cache: 'npm'
        cache-dependency-path: custom_components/dashview_v2/frontend/package-lock.json
    
    - name: Install dependencies
      working-directory: custom_components/dashview_v2/frontend
      run: npm ci
    
    - name: Test
      working-directory: custom_components/dashview_v2/frontend
      run: npm run test:coverage
    
    - name: Upload coverage
      uses: codecov/codecov-action@v3
      with:
        file: ./custom_components/dashview_v2/frontend/coverage/lcov.info
        flags: frontend
        name: frontend

  build:
    runs-on: ubuntu-latest
    needs: [lint-backend, lint-frontend, test-backend, test-frontend]
    
    steps:
    - uses: actions/checkout@v3
    
    - name: Setup Node.js
      uses: actions/setup-node@v3
      with:
        node-version: '18'
        cache: 'npm'
        cache-dependency-path: custom_components/dashview_v2/frontend/package-lock.json
    
    - name: Install dependencies
      working-directory: custom_components/dashview_v2/frontend
      run: npm ci
    
    - name: Build
      working-directory: custom_components/dashview_v2/frontend
      run: npm run build:prod
    
    - name: Upload build artifacts
      uses: actions/upload-artifact@v3
      with:
        name: frontend-build
        path: custom_components/dashview_v2/panel/

  integration-tests:
    runs-on: ubuntu-latest
    needs: build
    
    steps:
    - uses: actions/checkout@v3
    
    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.11'
    
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt
        pip install -r requirements-dev.txt
    
    - name: Download build artifacts
      uses: actions/download-artifact@v3
      with:
        name: frontend-build
        path: custom_components/dashview_v2/panel/
    
    - name: Run integration tests
      run: pytest tests/test_integration.py -v

  security-scan:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v3
    
    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.11'
    
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install bandit safety
    
    - name: Security scan with bandit
      run: bandit -r custom_components/dashview_v2/backend -ll
    
    - name: Check dependencies with safety
      run: safety check --json